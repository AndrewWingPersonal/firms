{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nconst useFetch = token => {\n  _s();\n  const [data1, setData1] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responsesJSON = await Promise.all([fetch('https://api.preqin.com/api/Investor?FirmID=2670', {\n          headers: {\n            'Authorization': 'Bearer' + token\n          }\n        }), fetch('https://api.preqin.com/api/Investor?FirmID=2792', {\n          headers: {\n            'Authorization': 'Bearer' + token\n          }\n        })]);\n        const [firm1, firm2] = await Promise.all(responsesJSON.map(r => r.json()));\n        setData1([firm1, firm2]);\n        setLoading(false);\n      } catch (err) {\n        setError(true);\n      }\n    };\n    fetchData();\n  }, []);\n  return {\n    data1,\n    loading,\n    error\n  };\n};\n_s(useFetch, \"3xilVd6ExAkf3ADzDTmUljj2nyg=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","token","_s","data1","setData1","loading","setLoading","error","setError","fetchData","responsesJSON","Promise","all","fetch","headers","firm1","firm2","map","r","json","err"],"sources":["/home/andrew/react_learning/custom_hook/preqin/src/hooks/useFetch.js"],"sourcesContent":["import {useEffect, useState} from 'react';\n\nconst useFetch = (token) => {\n\n  const [data1, setData1] = useState({});\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n\n    const fetchData = async () => {\n           try {\n              const responsesJSON = await Promise.all([\n                  fetch('https://api.preqin.com/api/Investor?FirmID=2670', {\n                    headers: {\n                      'Authorization': 'Bearer' + token\n                    }\n                  }),\n                  fetch('https://api.preqin.com/api/Investor?FirmID=2792', {\n                    headers: {\n                      'Authorization': 'Bearer' + token\n                    }\n                  })\n              ]);\n              const [firm1, firm2] = await Promise.all(responsesJSON.map(r => r.json()));\n              setData1([firm1, firm2])\n              setLoading(false)\n\n            } catch (err) {\n              setError(true)\n            }\n          };\n          \n          fetchData();\n    }, []);\n \n    return {data1, loading, error}\n}\n\nexport default useFetch;"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzCD,SAAS,CAAC,MAAM;IAEd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MACvB,IAAI;QACD,MAAMC,aAAa,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACpCC,KAAK,CAAC,iDAAiD,EAAE;UACvDC,OAAO,EAAE;YACP,eAAe,EAAE,QAAQ,GAAGb;UAC9B;QACF,CAAC,CAAC,EACFY,KAAK,CAAC,iDAAiD,EAAE;UACvDC,OAAO,EAAE;YACP,eAAe,EAAE,QAAQ,GAAGb;UAC9B;QACF,CAAC,CAAC,CACL,CAAC;QACF,MAAM,CAACc,KAAK,EAAEC,KAAK,CAAC,GAAG,MAAML,OAAO,CAACC,GAAG,CAACF,aAAa,CAACO,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1Ef,QAAQ,CAAC,CAACW,KAAK,EAAEC,KAAK,CAAC,CAAC;QACxBV,UAAU,CAAC,KAAK,CAAC;MAEnB,CAAC,CAAC,OAAOc,GAAG,EAAE;QACZZ,QAAQ,CAAC,IAAI,CAAC;MAChB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAACN,KAAK;IAAEE,OAAO;IAAEE;EAAK,CAAC;AAClC,CAAC;AAAAL,EAAA,CAnCKF,QAAQ;AAqCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}