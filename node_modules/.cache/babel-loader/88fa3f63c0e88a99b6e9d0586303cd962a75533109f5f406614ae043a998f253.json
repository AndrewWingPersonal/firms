{"ast":null,"code":"var _jsxFileName = \"/home/andrew/react_learning/custom_hook/preqin/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport useColumns from \"./useColumns\";\nimport { useTable } from \"react-table\";\nimport useFetch from './hooks/useFetch.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let urls = ['https://jsonplaceholder.typicode.com/todos/1', 'https://jsonplaceholder.typicode.com/todos/2'];\n  const {\n    data1,\n    data2\n  } = useFetch();\n  console.log(\"DATA: \" + data1.id);\n  const columns = useColumns();\n  console.log(\"columns: \" + columns);\n  const dataList = [data1];\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    dataList\n  });\n\n  //console.log(jsonData[0])\n\n  //const [data, isLoading, isError] = useFetch(['https://jsonplaceholder.typicode.com/todos/1'])\n\n  //console.log(\"HEREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\")\n\n  //const url = query && 'https://api.preqin.com/api/Investor?FirmId=' + query;\n\n  //const { myStatus, myData } = useFetch(query && 'https://api.preqin.com/api/Investor?FirmId=' + query);\n  //const { myStatus, myData } = useFetch('https://api.preqin.com/api/Investor?FirmId=' + query);\n\n  //const { myStatus, myData } = useFetch('https://api.preqin.com/api/Investor?FirmId=' + query);\n\n  //const { myStatus, myData } = useFetch();\n\n  //const [data2, isLoading2, isError2] = useFetch(myurl)\n\n  //console.log(\"data is..\")\n  //console.log(jsonData1)\n  /*\n  return (\n     <div className=\"App\">\n      <p>\"Hello World\"</p>\n    </div>\n    \n    <pre>{JSON.stringify(data1, null, 2)}</pre>\n   );\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JzSF0EjE8IulkIUGz92LNLk5fBo=\", false, function () {\n  return [useFetch, useColumns, useTable];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","useColumns","useTable","useFetch","jsxDEV","_jsxDEV","App","_s","urls","data1","data2","console","log","id","columns","dataList","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/home/andrew/react_learning/custom_hook/preqin/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useState, useEffect} from 'react';\nimport useColumns from \"./useColumns\";\nimport { useTable } from \"react-table\"\n\nimport useFetch from './hooks/useFetch.js';\n\nfunction App() {\n  let urls = ['https://jsonplaceholder.typicode.com/todos/1',\n              'https://jsonplaceholder.typicode.com/todos/2']\n\n  const { data1, data2 } = useFetch()\n\n  console.log(\"DATA: \" + data1.id)\n  \n  const columns = useColumns();\n  console.log(\"columns: \" + columns)\n\n  const dataList = [data1];\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({ columns, dataList});\n\n\n\n  //console.log(jsonData[0])\n  \n  //const [data, isLoading, isError] = useFetch(['https://jsonplaceholder.typicode.com/todos/1'])\n\n  //console.log(\"HEREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\")\n\n\n  //const url = query && 'https://api.preqin.com/api/Investor?FirmId=' + query;\n\n  //const { myStatus, myData } = useFetch(query && 'https://api.preqin.com/api/Investor?FirmId=' + query);\n  //const { myStatus, myData } = useFetch('https://api.preqin.com/api/Investor?FirmId=' + query);\n\n  //const { myStatus, myData } = useFetch('https://api.preqin.com/api/Investor?FirmId=' + query);\n\n  //const { myStatus, myData } = useFetch();\n\n  //const [data2, isLoading2, isError2] = useFetch(myurl)\n\n  \n  \n  //console.log(\"data is..\")\n  //console.log(jsonData1)\n  /*\n  return (\n\n    <div className=\"App\">\n      <p>\"Hello World\"</p>\n    </div>\n    \n    <pre>{JSON.stringify(data1, null, 2)}</pre>\n\n  );\n  */\n\n  return (\n    <div className=\"container\">\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n            <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n          ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}