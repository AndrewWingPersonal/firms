{"ast":null,"code":"var _jsxFileName = \"/home/andrew/react_learning/custom_hook/preqin/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport useColumns from \"./useColumns\";\nimport { useTable } from \"react-table\";\nimport useFetch from './hooks/useFetch.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    data1,\n    loading,\n    error\n  } = useFetch();\n\n  //const url = query && 'https://api.preqin.com/api/Investor?FirmId=' + query;\n\n  //const { myStatus, myData } = useFetch(query && 'https://api.preqin.com/api/Investor?FirmId=' + query);\n  //const { myStatus, myData } = useFetch('https://api.preqin.com/api/Investor?FirmId=' + query);\n\n  //const { myStatus, myData } = useFetch('https://api.preqin.com/api/Investor?FirmId=' + query);\n\n  //const { myStatus, myData } = useFetch();\n\n  //const [data2, isLoading2, isError2] = useFetch(myurl)\n\n  //console.log(\"data is..\")\n  //console.log(jsonData1)\n  /*\n  return (\n     <div className=\"App\">\n      <p>\"Hello World\"</p>\n    </div>\n    \n    <pre>{JSON.stringify(data1, null, 2)}</pre>\n   );\n  \n  return (\n    <div className=\"container\">\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n            <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n          ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n             return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n  {\n  \"userId\": 1,\n  \"id\": 1,\n  \"title\": \"delectus aut autem\",\n  \"completed\": false\n  }\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading == 'true' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"userId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), data1.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.completed ? \"true\" : \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"aBCUjIswinKhNUuXwerzHpgiFJE=\", false, function () {\n  return [useFetch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","useColumns","useTable","useFetch","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data1","loading","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","border","map","data","userId","title","completed","id","_c","$RefreshReg$"],"sources":["/home/andrew/react_learning/custom_hook/preqin/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useState, useEffect} from 'react';\nimport useColumns from \"./useColumns\";\nimport { useTable } from \"react-table\"\n\nimport useFetch from './hooks/useFetch.js';\n\nfunction App() {\n  \n  const { data1, loading, error } = useFetch()\n\n\n\n  //const url = query && 'https://api.preqin.com/api/Investor?FirmId=' + query;\n\n  //const { myStatus, myData } = useFetch(query && 'https://api.preqin.com/api/Investor?FirmId=' + query);\n  //const { myStatus, myData } = useFetch('https://api.preqin.com/api/Investor?FirmId=' + query);\n\n  //const { myStatus, myData } = useFetch('https://api.preqin.com/api/Investor?FirmId=' + query);\n\n  //const { myStatus, myData } = useFetch();\n\n  //const [data2, isLoading2, isError2] = useFetch(myurl)\n\n  \n  \n  //console.log(\"data is..\")\n  //console.log(jsonData1)\n  /*\n  return (\n\n    <div className=\"App\">\n      <p>\"Hello World\"</p>\n    </div>\n    \n    <pre>{JSON.stringify(data1, null, 2)}</pre>\n\n  );\n  \n  return (\n    <div className=\"container\">\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n            <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n          ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n\n\n{\n  \"userId\": 1,\n  \"id\": 1,\n  \"title\": \"delectus aut autem\",\n  \"completed\": false\n}\n*/\n\nreturn (\n  <div className=\"App\">\n    {loading == 'true' ? (\n      <div>Loading...</div>\n    ) : (\n      <>\n        <h1>Users</h1>\n        <table border={1}>\n          <tr>\n            <th>userId</th>\n            <th>title</th>\n            <th>completed</th>\n          </tr>\n          {data1.map(data => (\n            <tr key={data.id}>\n              <td>{data.userId}</td>\n              <td>{data.title}</td>\n              <td>{data.completed ? \"true\" : \"false\"}</td>\n            </tr>\n          ))}\n        </table>\n      </>\n    )}\n  </div>\n)\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,QAAQ,QAAQ,aAAa;AAEtC,OAAOC,QAAQ,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGT,QAAQ,CAAC,CAAC;;EAI5C;;EAEA;EACA;;EAEA;;EAEA;;EAEA;;EAIA;EACA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAOA,oBACEE,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBH,OAAO,IAAI,MAAM,gBAChBN,OAAA;MAAAS,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAErBb,OAAA,CAAAE,SAAA;MAAAO,QAAA,gBACET,OAAA;QAAAS,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdb,OAAA;QAAOc,MAAM,EAAE,CAAE;QAAAL,QAAA,gBACfT,OAAA;UAAAS,QAAA,gBACET,OAAA;YAAAS,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACfb,OAAA;YAAAS,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdb,OAAA;YAAAS,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,EACJR,KAAK,CAACU,GAAG,CAACC,IAAI,iBACbhB,OAAA;UAAAS,QAAA,gBACET,OAAA;YAAAS,QAAA,EAAKO,IAAI,CAACC;UAAM;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBb,OAAA;YAAAS,QAAA,EAAKO,IAAI,CAACE;UAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBb,OAAA;YAAAS,QAAA,EAAKO,IAAI,CAACG,SAAS,GAAG,MAAM,GAAG;UAAO;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAHrCG,IAAI,CAACI,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIZ,CACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA,eACR;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER;AAACT,EAAA,CAjGQD,GAAG;EAAA,QAEwBL,QAAQ;AAAA;AAAAuB,EAAA,GAFnClB,GAAG;AAmGZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}