{"ast":null,"code":"var _s2 = $RefreshSig$();\n/*\nimport {useEffect, useState} from 'react';\n\nconst useFetch = () => {\n\n    const [data1, setData1] = useState({});\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(false)\n\n\n    useEffect(() => {\n        const url = \"https://api.preqin.com/connect/token\";\n\n        const [data, setData] = useState({});\n\n        const fetchData = async () => {\n        try {\n            const response = await fetch(url);\n            const json = await response.json();\n            console.log(json);\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n        };\n\n        fetchData();\n\nreturn { data };\n*/\nimport { useEffect, useState } from 'react';\nimport useFetch from './useFetch.js';\nconst useObtainAuth = () => {\n  _s2();\n  const [data1, setData1] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const url = \"https://api.preqin.com/connect/token\";\n\n  //const newURLSearchParams = window.URLSearchParams;\n\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    const fetchData = async () => {\n      _s();\n      try {\n        const response = await fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          body: new URLSearchParams({\n            \"username\": \"dummydatafeeds@preqin.com\",\n            \"apikey\": \"8f0bc69bc2a643f8bb8034a15081962e\"\n          })\n        });\n        const reply = await response.json();\n        setToken(reply.access_token);\n        console.log(token);\n        setLoading(false);\n        const {\n          data1,\n          loading,\n          error\n        } = useFetch(token);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n    _s(fetchData, \"aBCUjIswinKhNUuXwerzHpgiFJE=\", false, function () {\n      return [useFetch];\n    });\n    fetchData();\n  }, [token]);\n  return {\n    data1,\n    loading,\n    error\n  };\n};\n_s2(useObtainAuth, \"NHUcd4dG7kcNdhiBjB5U+YK517M=\");\nexport default useObtainAuth;","map":{"version":3,"names":["useEffect","useState","useFetch","useObtainAuth","_s2","data1","setData1","loading","setLoading","error","setError","token","setToken","url","_s","$RefreshSig$","fetchData","response","fetch","method","headers","body","URLSearchParams","reply","json","access_token","console","log"],"sources":["/home/andrew/react_learning/custom_hook/preqin/src/hooks/useObtainAuth.js"],"sourcesContent":["/*\nimport {useEffect, useState} from 'react';\n\nconst useFetch = () => {\n\n    const [data1, setData1] = useState({});\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(false)\n\n\n    useEffect(() => {\n        const url = \"https://api.preqin.com/connect/token\";\n\n        const [data, setData] = useState({});\n\n        const fetchData = async () => {\n        try {\n            const response = await fetch(url);\n            const json = await response.json();\n            console.log(json);\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n        };\n\n        fetchData();\n\nreturn { data };\n*/\nimport {useEffect, useState} from 'react';\nimport useFetch from './useFetch.js'\n\nconst useObtainAuth = () => {\n\n   const [data1, setData1] = useState({});\n   const [loading, setLoading] = useState(true)\n   const [error, setError] = useState(false)\n   const [token, setToken] = useState(\"\")\n\n   const url = \"https://api.preqin.com/connect/token\";\n\n   //const newURLSearchParams = window.URLSearchParams;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n\n                const response = await fetch(url, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/x-www-form-urlencoded\"\n                    },\n                    body: new URLSearchParams({\n                        \"username\": \"dummydatafeeds@preqin.com\",\n                        \"apikey\": \"8f0bc69bc2a643f8bb8034a15081962e\"\n                    })\n                });\n                const reply = await response.json();\n                setToken(reply.access_token)\n                console.log(token);\n                setLoading(false)\n                const { data1, loading, error } = useFetch(token);\n\n                \n            } catch (error) {\n                console.log(\"error\", error);\n            }\n           };\n          \n          fetchData();\n    }, [token]);\n \n    return {data1, loading, error}\n}\n\nexport default useObtainAuth;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,QAAQ,MAAM,eAAe;AAEpC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAEzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,GAAG,GAAG,sCAAsC;;EAElD;;EAECb,SAAS,CAAC,MAAM;IAAA,IAAAc,EAAA,GAAAC,YAAA;IACZ,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAAAF,EAAA;MAC1B,IAAI;QAEA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;UAC9BM,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAE,IAAIC,eAAe,CAAC;YACtB,UAAU,EAAE,2BAA2B;YACvC,QAAQ,EAAE;UACd,CAAC;QACL,CAAC,CAAC;QACF,MAAMC,KAAK,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QACnCZ,QAAQ,CAACW,KAAK,CAACE,YAAY,CAAC;QAC5BC,OAAO,CAACC,GAAG,CAAChB,KAAK,CAAC;QAClBH,UAAU,CAAC,KAAK,CAAC;QACjB,MAAM;UAAEH,KAAK;UAAEE,OAAO;UAAEE;QAAM,CAAC,GAAGP,QAAQ,CAACS,KAAK,CAAC;MAGrD,CAAC,CAAC,OAAOF,KAAK,EAAE;QACZiB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAElB,KAAK,CAAC;MAC/B;IACD,CAAC;IAACK,EAAA,CAvBCE,SAAS;MAAA,QAiB2Bd,QAAQ;IAAA;IAQhDc,SAAS,CAAC,CAAC;EACjB,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,OAAO;IAACN,KAAK;IAAEE,OAAO;IAAEE;EAAK,CAAC;AAClC,CAAC;AAAAL,GAAA,CAzCKD,aAAa;AA2CnB,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}