{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nconst useFetch = urls => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const cache = useRef({});\n  console.log(\"here with\" + url);\n  useEffect(() => {\n    let index = 0;\n    while (index < urls.length) {\n      let url = urls[index];\n      if (cache.current[url]) {\n        setData(cache.current[url]);\n        setIsLoading(false);\n      } else {\n        const fetchData = async () => {\n          setIsLoading(true);\n          try {\n            const response = await fetch(url);\n            const json = await response.json();\n            setData(json);\n            cache.current[url] = json;\n            index++;\n          } catch (error) {\n            console.log(error);\n            setIsError(true);\n          } finally {\n            setIsLoading(false);\n          }\n        };\n        fetchData();\n      }\n    }\n  }, [urls]);\n  return [data, isLoading, isError];\n};\n_s(useFetch, \"NiDvM4EPNV6wgV8P6tjRoXCG9A4=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useRef","useFetch","urls","_s","data","setData","isLoading","setIsLoading","isError","setIsError","cache","console","log","url","index","length","current","fetchData","response","fetch","json","error"],"sources":["/home/andrew/react_learning/custom_hook/preqin/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\nconst useFetch = (urls) => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const cache = useRef({});\n\nconsole.log(\"here with\" + url)\n\n  useEffect(() => {\n\n    let index =0\n    while (index < urls.length) {\n      let url = urls[index]\n      if (cache.current[url]) {\n        setData(cache.current[url]);\n        setIsLoading(false);\n      } else {\n        const fetchData = async () => {\n          setIsLoading(true);\n          try {\n            const response = await fetch(url);\n            const json = await response.json();\n            setData(json);\n            cache.current[url] = json;\n            index++;\n          } catch (error) {\n            console.log(error);\n            setIsError(true);\n          } finally {\n            setIsLoading(false);\n          }\n        };\n        fetchData();\n      }\n    }\n  }, [urls]);\n\n  return [data, isLoading, isError];\n};\n\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEnD,MAAMC,QAAQ,GAAIC,IAAI,IAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMY,KAAK,GAAGV,MAAM,CAAC,CAAC,CAAC,CAAC;EAE1BW,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGC,GAAG,CAAC;EAE5Bd,SAAS,CAAC,MAAM;IAEd,IAAIe,KAAK,GAAE,CAAC;IACZ,OAAOA,KAAK,GAAGZ,IAAI,CAACa,MAAM,EAAE;MAC1B,IAAIF,GAAG,GAAGX,IAAI,CAACY,KAAK,CAAC;MACrB,IAAIJ,KAAK,CAACM,OAAO,CAACH,GAAG,CAAC,EAAE;QACtBR,OAAO,CAACK,KAAK,CAACM,OAAO,CAACH,GAAG,CAAC,CAAC;QAC3BN,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,MAAM;QACL,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;UAC5BV,YAAY,CAAC,IAAI,CAAC;UAClB,IAAI;YACF,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAG,CAAC;YACjC,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;YAClCf,OAAO,CAACe,IAAI,CAAC;YACbV,KAAK,CAACM,OAAO,CAACH,GAAG,CAAC,GAAGO,IAAI;YACzBN,KAAK,EAAE;UACT,CAAC,CAAC,OAAOO,KAAK,EAAE;YACdV,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;YAClBZ,UAAU,CAAC,IAAI,CAAC;UAClB,CAAC,SAAS;YACRF,YAAY,CAAC,KAAK,CAAC;UACrB;QACF,CAAC;QACDU,SAAS,CAAC,CAAC;MACb;IACF;EACF,CAAC,EAAE,CAACf,IAAI,CAAC,CAAC;EAEV,OAAO,CAACE,IAAI,EAAEE,SAAS,EAAEE,OAAO,CAAC;AACnC,CAAC;AAACL,EAAA,CAtCIF,QAAQ;AAwCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}