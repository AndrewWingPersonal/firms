{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\n\n/*\nconst useFetch = () => {\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n              const responsesJSON = await Promise.all([\n                  fetch('https://jsonplaceholder.typicode.com/todos/1'),\n                  fetch('https://jsonplaceholder.typicode.com/todos/2')\n              ]);\n              const [todoOne, todoTwo] = await Promise.all(responsesJSON.map(r => r.json()));\n              console.log(todoOne, 'todoOne');\n              console.log(todoTwo, 'todoTwo');\n            } catch (err) {\n              throw err;\n            }\n          };\n          \n          fetchData();\n    });\n}\n*/\n\nconst useFetch = urls => {\n  _s();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let i = 0;\n        while (i < urls.length) {\n          const response = await fetch(urls[i]);\n          const json = await response.json();\n          console.log(json);\n          i++;\n        }\n      } catch (err) {\n        throw err;\n      }\n    };\n    fetchData();\n  });\n};\n_s(useFetch, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useFetch","urls","_s","fetchData","i","length","response","fetch","json","console","log","err"],"sources":["/home/andrew/react_learning/custom_hook/preqin/src/hooks/useFetch.js"],"sourcesContent":["import {useEffect} from 'react';\n\n/*\nconst useFetch = () => {\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n              const responsesJSON = await Promise.all([\n                  fetch('https://jsonplaceholder.typicode.com/todos/1'),\n                  fetch('https://jsonplaceholder.typicode.com/todos/2')\n              ]);\n              const [todoOne, todoTwo] = await Promise.all(responsesJSON.map(r => r.json()));\n              console.log(todoOne, 'todoOne');\n              console.log(todoTwo, 'todoTwo');\n            } catch (err) {\n              throw err;\n            }\n          };\n          \n          fetchData();\n    });\n}\n*/\n\nconst useFetch = (urls) => {\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                let i = 0;\n\n                while (i < urls.length) {\n                    const response = await fetch(urls[i]);\n                    const json = await response.json();\n                    console.log(json);\n                    i++;\n                }\n            } catch (err) {\n                  throw err;\n            }\n          };\n          \n          fetchData();\n    });\n}\n\nexport default useFetch;"],"mappings":";AAAA,SAAQA,SAAS,QAAO,OAAO;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAIC,IAAI,IAAK;EAAAC,EAAA;EACvBH,SAAS,CAAC,MAAM;IACZ,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,IAAIC,CAAC,GAAG,CAAC;QAET,OAAOA,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAE;UACpB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,IAAI,CAACG,CAAC,CAAC,CAAC;UACrC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;UAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;UACjBJ,CAAC,EAAE;QACP;MACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;QACR,MAAMA,GAAG;MACf;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACjB,CAAC,CAAC;AACN,CAAC;AAAAD,EAAA,CAnBKF,QAAQ;AAqBd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}